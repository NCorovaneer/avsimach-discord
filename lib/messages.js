const {getAnimeGif, getGif} = require('./imgur');
const {comparePlanes} = require('./jetchart-index');
const {getBlueflagStatusMessage} = require('./blueflag');
const animeRegexp = require('../utils/anime-regexp');

const COMPARE_REGEX = /([M|F|S|A]\S*)\s–∏\s([M|F|S|A]\S*)/gi;
const SHOW_REGEX = /–ø–æ–∫–∞–∂–∏\s(.*)$/gi;
const MEMES_LIMIT = 3;
const HOME_ID = '444034088429551619';
const BOSS_ID = '466307524040327179';

let memesCount = 0;
let memesInterval = setInterval(() => {
	memesCount = 0;
}, 60000 * 65);

const MESSAGES = {
	buddy: {
		pattern: /–¥—Ä—É–∂–æ–∫|–¥—Ä—É–∂–æ—á–µ–∫/gi,
		reply: message => {
			message.reply('–ø–∏—Ä–æ–∂–æ—á–µ–∫')
		}
	},
	chack: {
		pattern: /\/—á–∞–∫/gi,
		reply: message => {
			message.reply({file: 'https://cdn.discordapp.com/attachments/444034088429551619/466315013607522304/5b168d61ee2cc163d01846b8.png'})
		}
	},
	hmd: {
		pattern: /\/nashlem|\/–Ω–∞—à–ª–µ–º/gi,
		reply: message => {
			message.reply({file: 'https://i.imgur.com/7FHoSIG.png'})
		}
	},
	findGif: {
		pattern: /–Ω–∞—á–∞–ª—å–Ω–∏–∫, –ø–æ–∫–∞–∂–∏|–Ω–∞—á–∞–ª—å–Ω–∏–∫ –ø–æ–∫–∞–∂–∏/gi,
		reply: message => {
			if (memesCount >= MEMES_LIMIT) {
				message.reply('—Ç–∞–ª–æ–Ω—ã –Ω–∞ –º–µ–º—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å, –∂–¥–∏—Ç–µ –Ω–æ–≤—ã—Ö');

				console.log('memesCount >', memesCount, 'MEMES_LIMIT >', MEMES_LIMIT);

				return;
			}

			memesCount++;

			if (MEMES_LIMIT - memesCount === 1) {
				message.guild.channels.get(HOME_ID).send('–æ—Å—Ç–∞–ª—Å—è –æ–¥–∏–Ω —Ç–∞–ª–æ–Ω –Ω–∞ –æ–¥–∏–Ω –º–µ–º');
			}

			message.content.match(SHOW_REGEX);

			const query = RegExp.$1;

			getGif(message, query);
		}
	},
	memesLeft: {
		pattern: /–Ω–∞—á–∞–ª—å–Ω–∏–∫, —Å–∫–æ–ª—å–∫–æ —Ç–∞–ª–æ–Ω–æ–≤|–Ω–∞—á–∞–ª—å–Ω–∏–∫, —Å–∫–æ–ª—å–∫–æ –º–µ–º–æ–≤/gi,
		reply: message => {
			const memesLeft = MEMES_LIMIT - memesCount;
			let ticketString;
			let ticketsLeftString = '–æ—Å—Ç–∞–ª–æ—Å—å';

			if (memesLeft === 0) {
				ticketString = '—Ç–∞–ª–æ–Ω–æ–≤';
			} else if (memesLeft === 1) {
				ticketsLeftString = '–æ—Å—Ç–∞–ª—Å—è';
				ticketString = '—Ç–∞–ª–æ–Ω';
			} else {
				ticketString = '—Ç–∞–ª–æ–Ω–∞';
			}

			message.reply(`${ticketsLeftString} ${memesLeft} ${ticketString} –Ω–∞ –º–µ–º—ã`);
		}
	},
	infa: {
		pattern: /60\/40/gi,
		reply: message => {
			_checkInfa(message)
		}
	},
	egg: {
		pattern: /egg|–ø–æ–∂–µ–ª|–ø–æ–∂–∏–ª|–µ–≥–≥–ø|–±–∞–∫–ª–∞–∂–∞–Ω|—ç–≥–≥|–µ–≥–ø/gi,
		reply: message => {
			message.react('üçÜ');
		}
	},
	compare: {
		pattern: /–Ω–∞—á–∞–ª—å–Ω–∏–∫, —Å—Ä–∞–≤–Ω–∏|–Ω–∞—á–∞–ª—å–Ω–∏–∫ —Å—Ä–∞–≤–Ω–∏/gi,
		reply: message => {
			message.content.match(COMPARE_REGEX);

			const firstPlane = RegExp.$1;
			const secondPlane = RegExp.$2;

			if (!firstPlane || !secondPlane) {
				message.reply('—á–µ—Ç –Ω–∏—á–µ–≥–æ –Ω–µ —Å–º–∞—Ç—á–∏–ª–æ—Å—å, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ');

				return;
			}

			comparePlanes(firstPlane, secondPlane)
				.then(compareMessage => {
					message.reply(compareMessage);
				})
				.catch(error => {
					console.log(error);

					message.reply('—á—Ç–æ-—Ç–æ —Å–ª–æ–º–∞–ª–æ—Å—å');
				});
		}
	},
	delete: {
		pattern: /–Ω–∞—á–∞–ª—å–Ω–∏–∫, —É–¥–∞–ª–∏|–Ω–∞—á–∞–ª—å–Ω–∏–∫ —É–¥–∞–ª–∏|–Ω–∞—á–∞–ª—å–Ω–∏–∫, —É–¥–æ–ª–∏|–Ω–∞—á–∞–ª—å–Ω–∏–∫ —É–¥–æ–ª–∏/gi,
		reply: message => {
			const userId = message.author.id;
			const match = new RegExp(userId, 'gi');

			message.channel.fetchMessages({limit: 15})
				.then(messages => {
					const messageToDeleted = messages.filter(ms => {
						return (ms.author.id === BOSS_ID && match.test(ms.content));
					}).array();

					if (messageToDeleted.length) {
						messageToDeleted[0].delete();
					}
				})
				.catch(() => {
					message.reply('—Å–æ—Ä—Ä–µ, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫');
				});
		}
	},
	blueflag: {
		pattern: /–Ω–∞—á–∞–ª—å–Ω–∏–∫, —á–µ –ø–æ –±–ª—é—Ñ–ª–∞–≥—É|–Ω–∞—á–∞–ª—å–Ω–∏–∫, —á–µ –ø–æ –±–ª—é–ø—É–∫—É/gi,
		reply: message => {
			const guild = message.guild;
			const redStar = guild.emojis.find('name', 'red_star');
			const blueStar = guild.emojis.find('name', 'blue');

			getBlueflagStatusMessage(redStar, blueStar)
				.then(statusMessage => {
					message.reply(statusMessage);
				})
				.catch(() => {
					message.reply('—Å–æ—Ä—Ä–µ, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫');
				});
		}
	}
};

function _checkInfa(message) {
	const channel = message.guild.channels.get(HOME_ID);

	message.reply('–ü—Ä–æ–≤–µ—Ä—è—é –∏–Ω—Ñ—É...');

	setTimeout(() => {
		channel.send('–ü—Ä–æ–≤–µ—Ä–∏–ª. ' + (Math.floor(Math.random() * 10) > 5
			? '–ò–Ω—Ñ–∞ –ª–æ–∂–Ω–∞—è'
			: '–ò–Ω—Ñ—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é'));
	}, 5000);
}

module.exports = MESSAGES;
